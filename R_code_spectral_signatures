# R_code_spectral_signatures.r

library(raster)
library(rgdal)
setwd("/Users/paolopatrizio/Desktop/lab")
defor2<-brick("defor2.png")
plotRGB(defor2, 1,2,3,stretch="lin") # si puÃ² anche applicare uno stretch a istogramma ("hist")
#con la funzione click riusciamo ad ottenere le informazioni dell'immagine operando un semplice click sull'immagine, gli argomenti riguardano le caratteristiche che vogliamo osservare
click(defor2, id=T, xy=T, cell=T, type="p", pch=16, col="green")
# xy= informazione spaziale; cell= numero pixel, type= tipo di punto rappresentato 

## results 
#      x     y   cell defor2.1 defor2.2 defor2.3
# 1 151.5 275.5 144986      205        9       23
#      x    y   cell defor2.1 defor2.2 defor2.3
# 1 405.5 93.5 275734       79       63       92
      x     y   cell defor2.1 defor2.2 defor2.3

#creiamo vettori con i valori investigati tramite la funzione click
band <-c(1,2,3)
forest <-c(205,9,23)
water <-c(79,63,92)
# creiamo una tabella con la funzione data.frame
spectral_s<-data.frame (band, forest, water)
# plottiamo le firme spettrali con ggplot, per fare questo dobbiamo impostare dei parametri quali gli assi (asse X= bande, asse Y= riflettanza)
ggplot(spectral_s, aes(x=band)) +
geom_line(aes(y=forest), color="green") +
geom_line(aes(y=water), color="blue") +
labs(x="band", y="reflectance")

####### multitemporal analysis
defor1<-brick("defor1.png")
plotRGB(defor1, 1,2,3,stretch="lin")
click(defor2, id=T, xy=T, cell=T, type="p", pch=16, col="green")
## results for defor1
#      x     y   cell defor2.1 defor2.2 defor2.3
# 1 208.5 316.5 115646      153        0       25
# 2 258.5 310.5 119998      159      150      133
# 3 297.5 321.5 112150      204      182      169
# 4 291.5 355.5  87766      219      118      124
# 5 267.5 361.5  83440      212      173      176
# 6 217.5 370.5  76937      201      144      137

## results for defor2
#      x     y   cell defor2.1 defor2.2 defor2.3
# 1 241.5 320.5 112811      158      163      143
# 2 282.5 323.5 110701      184      135      138
# 3 303.5 318.5 114307      170      164      150
# 4 294.5 346.5  94222      198      207      188
# 5 270.5 343.5  96349      186      166      157
# 6 205.5 348.5  92699      166      154      140

band<- c(1,2,3)
time1<- c(159,150,133)
time2<- c(184,135,138)

spectral_st<-data.frame(band,time1,time2)

ggplot(spectral_s, aes(x=band)) +
geom_line(aes(y=time1), color="pink") +
geom_line(aes(y=time2), color="red") +
labs(x="band", y="reflectance")

## possiamo fare la stessa cosa generando punti casuali (vedere lezione ore 10:30)  e poi estraendoli (extract)
jp <- brick("june_puzzler.jpg")
plotRGB(jp, 1,2,3,stretch="lin")
click(jp, id=T, xy=T, cell=T, type="p", pch=16, col="green")
#      x     y   cell june_puzzler.1 june_puzzler.2 june_puzzler.3
# 1 141.5 145.5 240622             40            139              0
# 2  71.5 438.5  29592            232            228             35
# 3 548.5 283.5 141669             32             17             10

band<- c(1,2,3)
point1<- c(40,139,0)
point2<- c(232,228,35)
point3<- c(32,17,10)

spectral_jp <- data.frame(band,point1,point2,point3)

ggplot(spectral_jp, aes(x=band)) +
geom_line(aes(y=point1), color="pink") +
geom_line(aes(y=point2), color="red") +
geom_line(aes(y=point3), color="dark red") +
labs(x="band", y="reflectance")

